// SPDX-License-Identifier: UNLICENSED

// Usage: source .env && forge script ./script/Deploy.Deterministic.s.sol --rpc-url=$SEPOLIA_RPC_URL --broadcast --etherscan-api-key=$ETHERSCAN_API_KEY --verify
// - Ethereum: forge script script/Deploy.Determinstic.s.sol -vvv --verify --broadcast --rpc-url https://rpc.ankr.com/eth
// - Arbitrum: forge script script/Deploy.Determinstic.s.sol --rpc-url https://arb1.arbitrum.io/rpc -vvv --broadcast --verify
// - Base: forge script script/Deploy.Determinstic.s.sol --rpc-url https://mainnet.base.org --broadcast --verify
// - Plume: forge script script/Deploy.Determinstic.s.sol --verify --rpc-url https://98865.rpc.thirdweb.com/ --verifier blockscout --verifier-url
// https://phoenix-explorer.plumenetwork.xyz/api\? -vvvvv --broadcast -g 2000
// - Corn: forge script ./script/Deploy.Determinstic.s.sol --rpc-url https://maizenet-rpc.usecorn.com/ --verifier blockscout --verifier-url
// https://maizenet-explorer.usecorn.com/api/ --broadcast --verify
// - Berachain Bartio: forge script ./script/Deploy.Determinstic.s.sol --rpc-url  https://bartio.rpc.berachain.com/ --verifier-url
// https://api.routescan.io/v2/network/testnet/evm/80084/etherscan/api --broadcast --verify
// - Berachain Cartio: forge script ./script/Deploy.Determinstic.s.sol --rpc-url https://teddilion-eth-cartio.berachain.com --verifier-url
// https://api.routescan.io/v2/network/testnet/evm/80000/etherscan/api --broadcast --verify

pragma solidity ^0.8.0;

import "forge-std/Script.sol";

import { WrappedVault } from "../src/WrappedVault.sol";
import { WrappedVaultFactory } from "../src/WrappedVaultFactory.sol";
import { Points } from "../src/Points.sol";
import { PointsFactory } from "../src/PointsFactory.sol";
import { VaultMarketHub } from "../src/VaultMarketHub.sol";
import { RecipeMarketHub } from "../src/RecipeMarketHub.sol";
import { WeirollWallet } from "../src/WeirollWallet.sol";

import { MockERC20 } from "test/mocks/MockERC20.sol";
import { MockERC4626 } from "test/mocks/MockERC4626.sol";

// Deployer
address constant CREATE2_FACTORY_ADDRESS = 0x4e59b44847b379578588920cA78FbF26c0B4956C;

// Deployment Salts
string constant POINTS_FACTORY_SALT = "ROYCO_POINTS_FACTORY_458371a243a7299e99f3fbfb67799eaaf734ccaf";
string constant WRAPPED_VAULT_SALT = "ROYCO_WRAPPED_VAULT_627001f37bde0b6f93a8a618530963e24ea2b9af";
string constant WRAPPED_VAULT_FACTORY_SALT = "ROYCO_WRAPPED_VAULT_FACTORY_5414c04eeefec8db6047b9508f5c07245a5e7c81";
string constant WEIROLL_WALLET_SALT = "ROYCO_WEIROLL_WALLET_458371a243a7299e99f3fbfb67799eaaf734ccaf";
string constant VAULT_MARKET_HUB_SALT = "ROYCO_VAULT_MARKET_HUB_458371a243a7299e99f3fbfb67799eaaf734ccaf";
string constant RECIPE_MARKET_HUB_SALT = "ROYCO_RECIPE_MARKET_HUB_458371a243a7299e99f3fbfb67799eaaf734ccaf";

// Deployment Configuration
address constant ROYCO_OWNER = 0x85De42e5697D16b853eA24259C42290DaCe35190;
address constant PROTOCOL_FEE_RECIPIENT = 0x85De42e5697D16b853eA24259C42290DaCe35190;
uint256 constant PROTOCOL_FEE = 0;
uint256 constant MINIMUM_FRONTEND_FEE = 0.005e18;

address constant _OLD_WRAPPED_VAULT_IMPLEMENTATION_DO_NOT_USE_APART_FROM_WVF_DEPLOYMENT = 0xd13868133A5A51F78Ea3a1a903986DaED38fE5B6;

// Expected Deployment Addresses
address constant EXPECTED_POINTS_FACTORY_ADDRESS = 0x19112AdBDAfB465ddF0b57eCC07E68110Ad09c50;
address constant EXPECTED_WRAPPED_VAULT_ADDRESS = 0xb0a3960B115E0999F33e8AfD4a11f16e04e2bf33;
address constant EXPECTED_WRAPPED_VAULT_FACTORY_ADDRESS = 0x75E502644284eDf34421f9c355D75DB79e343Bca;
address constant EXPECTED_WEIROLL_WALLET_ADDRESS = 0x40a1c08084671E9A799B73853E82308225309Dc0;
address constant EXPECTED_VAULT_MARKET_HUB_ADDRESS = 0xa97eCc6Bfda40baf2fdd096dD33e88bd8e769280;
address constant EXPECTED_RECIPE_MARKET_HUB_ADDRESS = 0x783251f103555068c1E9D755f69458f39eD937c0;

bytes32 constant WRAPPED_VAULT_FACTORY_IMPL_SLOT = bytes32(uint256(2));

contract DeployDeterministic is Script {
    error Create2DeployerNotDeployed();

    error DeploymentFailed(bytes reason);
    error NotDeployedToExpectedAddress(address expected, address actual);
    error AddressDoesNotContainBytecode(address addr);
    error UnexpectedDeploymentAddress(address expected, address actual);

    error PointsFactoryOwnerIncorrect(address expected, address actual);

    error WrappedVaultFactoryProtocolFeeRecipientIncorrect(address expected, address actual);
    error WrappedVaultFactoryProtocolFeeIncorrect(uint256 expected, uint256 actual);
    error WrappedVaultFactoryMinimumFrontendFeeIncorrect(uint256 expected, uint256 actual);
    error WrappedVaultFactoryOwnerIncorrect(address expected, address actual);
    error WrappedVaultFactoryPointsFactoryIncorrect(address expected, address actual);
    error WrappedVaultFactoryImplementationIncorrect(address expected, address actual);

    error VaultMarketHubOwnerIncorrect(address expected, address actual);

    error RecipeMarketHubWeirollWalletImplementationIncorrect(address expected, address actual);
    error RecipeMarketHubProtocolFeeIncorrect(uint256 expected, uint256 actual);
    error RecipeMarketHubMinimumFrontendFeeIncorrect(uint256 expected, uint256 actual);
    error RecipeMarketHubOwnerIncorrect(address expected, address actual);
    error RecipeMarketHubPointsFactoryIncorrect(address expected, address actual);

    function _generateUint256SaltFromString(string memory _salt) internal pure returns (uint256) {
        return uint256(keccak256(abi.encodePacked(_salt)));
    }

    function _generateDeterminsticAddress(string memory _salt, bytes memory _creationCode) internal pure returns (address) {
        uint256 salt = _generateUint256SaltFromString(_salt);
        bytes32 hash = keccak256(abi.encodePacked(bytes1(0xff), CREATE2_FACTORY_ADDRESS, salt, keccak256(_creationCode)));
        return address(uint160(uint256(hash)));
    }

    function _checkDeployer() internal view {
        if (CREATE2_FACTORY_ADDRESS.code.length == 0) {
            revert Create2DeployerNotDeployed();
        }
    }

    /// @dev Given that the WrappedVaultFactory needs to be deployed with the old implementation address and that the factory checks that the implementation
    /// address has code, we need to deploy the old implementation as well.
    /// @dev This function deploys the old WrappedVault implementation.
    function _deployOldWrappedVaultImplementation() internal {
        if (_OLD_WRAPPED_VAULT_IMPLEMENTATION_DO_NOT_USE_APART_FROM_WVF_DEPLOYMENT.code.length != 0) {
            return;
        }

        bytes memory deploymentCalldata =
            hex"a31749b9ffae7a4d26932175ec41143df6998991e34b6e752e3882f66fef76606080806040523460155761518d908161001a8239f35b5f80fdfe6080806040526004361015610013575b5f80fd5b5f3560e01c90816301e1d11414613d215750806306fdde0314613c5057806307a2d13a14613b95578063095ea7b314613b155780630a28a47714613a5a57806315a0ea6a14613a0757806318160ddd146139e25780631e83409a1461398257806321c0b3421461391b57806322a7f2df146138ed57806323b872dd146137f9578063250b9ded146137cb578063256929621461377c5780632dbfa7351461374f578063313ce567146137275780633644e515146136fd57806338d52e0f146136cf578063402d267d1461360d578063411557d1146135df57806342823a27146130df5780634b36820e14612ecf5780634cdad50614612e145780634d5ce03814612dcf57806354d1f13d14612d85578063650b4f8b146123ac57806366fa3e1e1461210d5780636e553f6514611fd157806370a0823114611f9157806370f4f71414611f55578063715018a614611f0657806374ff7b1214611e9a5780637ecebe0014611e5a57806387f79df514611dfe5780638aea3dc914611dd95780638da5cb5b14611da757806394bf804d14611bd157806395d89b4114611afe578063a9059cbb14611a5b578063a9e0ee95146119f5578063aa935db4146118e9578063ab30342b146118bb578063b158970814611896578063b3d7f6b9146117db578063b460af9414611561578063ba087652146113a1578063bbef350414611352578063c12a8e5c146111f1578063c63d75b61461112f578063c6e6f59214611074578063ce96cb7714610f06578063d505accf14610c90578063d8e20b5514610c2b578063d905777e14610b49578063dd62ed3e14610aed578063e7812aa014610967578063ea43d5b314610930578063ef8b30f714610875578063f04e283e14610820578063f090f359146103c1578063f2fde38b1461037e578063f301af4214610331578063fb5478b31461030e5763fee81cf4146102d4575f61000f565b3461030a576020600319360112610306576102ed613f29565b63389a75e1600c525f52602080600c2054604051908152f35b5f80fd5b5f80fd5b3461032d575f60031936011261032957602060405160148152f35b5f80fd5b5f80fd5b3461037a57602060031936011261037657600435600e54811015610372576001600160a01b0361036260209261402f565b90549060031b1c16604051908152f35b5f80fd5b5f80fd5b5f80fd5b60206003193601126103bd57610392613f29565b61039a614982565b8060601b156103b0576103ac90614f99565b5f80f35b637448fbae5f526004601cfd5b5f80fd5b608060031936011261081c576103d5613f29565b60243590604435906103e5613f5d565b926103ee614982565b6001600160a01b038216805f52600f60205260ff60405f2054161561080d57805f52601060205260405f209063ffffffff825460201c16808611156107e5574210156107bd5761043d8461499e565b5061044a600d5484614a77565b90600460206001600160a01b03600c5416604051928380927fb0e21e8a0000000000000000000000000000000000000000000000000000000082525afa80156107b2575f90610776575b61049f915085614a77565b96815f5260136020526001600160a01b0360405f2091165f5260205260405f206104ca838254614143565b90555f52601360205260405f20600460206001600160a01b03600c5416604051928380927f64df049e0000000000000000000000000000000000000000000000000000000082525afa801561076b576001600160a01b03915f9161073c575b50165f5260205260405f2061053f878254614143565b905581549463ffffffff86168042115f14610736575063ffffffff421642810361073257915b63ffffffff83169462093a8061057b8785614122565b1061070a57888291858a60401c6bffffffffffffffffffffffff169a60201c63ffffffff16906105aa916142f4565b63ffffffff166105ba908b614322565b6bffffffffffffffffffffffff16926105d291614122565b906105dc91614122565b906105e691614143565b6105f08684614122565b6105f99161418b565b9780826106068a8c614122565b6106108987614122565b610619916141a9565b9061062391614143565b9061062d91614143565b9789106106e2578563ffffffff1986541617855563ffffffff8316948386036106de5761065a86826141d2565b6bffffffffffffffffffffffff8a168a81036106da576106799161420b565b8285036106d6576106d2986106ba6106b47eb5872962060662c5491519c5a10738afb84fc4f50598be29590a70916fe21d986106c896614122565b826141a9565b906040519687968a88614250565b0390a13390614aa3565b5f80f35b5f80fd5b5f80fd5b5f80fd5b7feb12d3fd000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fb534741d000000000000000000000000000000000000000000000000000000005f5260045ffd5b5f80fd5b91610565565b61075e915060203d602011610764575b6107568183613ec8565b810190614164565b89610529565b503d61074c565b6040513d5f823e3d90fd5b506020813d6020116107a6575b8161079060209383613ec8565b810103126107a25761049f9051610494565b5f80fd5b602091503d9150610783565b6040513d5f823e3d90fd5b7f9a173811000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f5a4e6a10000000000000000000000000000000000000000000000000000000005f5260045ffd5b6314414f4160e11b5f5260045ffd5b5f80fd5b602060031936011261087157610834613f29565b61083c614982565b63389a75e1600c52805f526020600c209081544211610864575f6108609255614f99565b5f80f35b636f5e88185f526004601cfd5b5f80fd5b3461092c57602060031936011261092857602460206001600160a01b0360095416604051928380927fef8b30f700000000000000000000000000000000000000000000000000000000825260043560048301525afa801561091d575f906108e2575b602090604051908152f35b506020813d602011610911575b816108fc60209383613ec8565b8101031261090d57602090516108d7565b5f80fd5b602091503d91506108ef565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b3461096357604060031936011261095f57602061095761094e613f29565b602435906144c1565b604051908152f35b5f80fd5b5f80fd5b6040600319360112610ae95761097b613f29565b610983613f43565b61098b614982565b6001600160a01b038116805f52601260205260405f205f8052602052610a3660405f206b033b2e3c9fd0803ce8000000610a2f6001604051936109cd85613e98565b80548552015460208401908152855f526011602052610a29610a1060405f20885f526010602052610a0a610a0460405f20926143b9565b91614290565b90614dd6565b9451945f8052600460205260405f205492519051614122565b906141a9565b0490614143565b610a405f84615039565b506fffffffffffffffffffffffffffffffff811692818403610ae55784610ac9837f913c992353dc81b7a8ba31496c484e9b6306bd2f6c509a649a38fdf5e1c953b2976001600160a01b0394608098885f52601260205260405f205f8052602052610ac26fffffffffffffffffffffffffffffffff60405f2092168254614122565b905561472c565b6040519384525f60208501521660408301526060820152a15f80f35b5f80fd5b5f80fd5b34610b45576040600319360112610b4157610b06613f29565b6001600160a01b03610b16613f43565b91165f5260056020526001600160a01b0360405f2091165f52602052602060405f2054604051908152f35b5f80fd5b5f80fd5b34610c27576020600319360112610c23576001600160a01b03610b6a613f29565b165f526004602052602460405f205460206001600160a01b0360095416604051938480927fd905777e0000000000000000000000000000000000000000000000000000000082523060048301525afa908115610c18575f91610bdb575b602092506040519181811090821802188152f35b90506020823d602011610c0c575b81610bf660209383613ec8565b81010312610c08576020915190610bc7565b5f80fd5b602091503d9150610be9565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b34610c8c576040600319360112610c8857610c44613f29565b6001600160a01b03610c54613f43565b91165f5260126020526001600160a01b0360405f2091165f526020526040805f206001815491015482519182526020820152f35b5f80fd5b5f80fd5b34610f025760e0600319360112610efe57610ca9613f29565b610cb1613f43565b6044356064359260843560ff8116809103610efa57428510610e9c5760805f916020936001600160a01b03610ce4614103565b91169687855260088652604085209889549960018b019055604051906001600160a01b03888301937f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c985528b6040850152169a8b6060840152898784015260a083015260c082015260c08152610d5b60e082613ec8565b51902060405190868201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152610da2606282613ec8565b519020906040519182528482015260a435604082015260c435606082015282805260015afa15610e91576001600160a01b035f511680151580610e88575b15610e2a577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925916020915f526005825260405f20855f5282528060405f2055604051908152a35f80f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b50828114610de0565b6040513d5f823e3d90fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b5f80fd5b5f80fd5b5f80fd5b3461107057602060031936011261106c57610f1f613f29565b6001600160a01b03806009541691165f52600460205260405f205490604051917f07a2d13a0000000000000000000000000000000000000000000000000000000083526004830152602082602481845afa918215611061575f92611021575b50906020602492604051938480927fce96cb770000000000000000000000000000000000000000000000000000000082523060048301525afa908115611016575f91610fd9575b602092506040519181811090821802188152f35b90506020823d60201161100a575b81610ff460209383613ec8565b81010312611006576020915190610fc5565b5f80fd5b602091503d9150610fe7565b6040513d5f823e3d90fd5b91506020823d602011611055575b8161103c60209383613ec8565b81010312611051576020602492519250610f7e565b5f80fd5b602091503d915061102f565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b3461112b57602060031936011261112757602460206001600160a01b0360095416604051928380927fc6e6f59200000000000000000000000000000000000000000000000000000000825260043560048301525afa801561111c575f906110e1575b602090604051908152f35b506020813d602011611110575b816110fb60209383613ec8565b8101031261110c57602090516110d6565b5f80fd5b602091503d91506110ee565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b346111ed5760206003193601126111e957611148613f29565b50602460206001600160a01b0360095416604051928380927fc63d75b60000000000000000000000000000000000000000000000000000000082523060048301525afa80156111de575f906111a3575b602090604051908152f35b506020813d6020116111d2575b816111bd60209383613ec8565b810103126111ce5760209051611198565b5f80fd5b602091503d91506111b0565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b3461134e57606060031936011261134a5760043561120d613f43565b90611227816001600160a01b03600a541630903390614d16565b6001600160a01b036009541690602060405180937f6e553f65000000000000000000000000000000000000000000000000000000008252815f8161126f30886004840161439e565b03925af191821561133f575f92611303575b5060443582106112db576001600160a01b03836112a084602096614cb5565b604051928352838584015216907fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d760403392a3604051908152f35b7f1fc7e2e0000000000000000000000000000000000000000000000000000000005f5260045ffd5b9091506020813d602011611333575b8161131f60209383613ec8565b8101031261132f57519083611281565b5f80fd5b602091503d9150611312565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b3461139d576020600319360112611399576001600160a01b03611373613f29565b165f5260116020526040805f2063ffffffff600182549201541682519182526020820152f35b5f80fd5b5f80fd5b3461155d576113af36613fe9565b6001600160a01b03819392931690828233036114c4575b6113cf91614fd7565b6001600160a01b036009541691602060405180947fba087652000000000000000000000000000000000000000000000000000000008252815f81611418308b896004850161449e565b03925af19283156114b9575f93611471575b506001600160a01b03602094604051928584528684015216907ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db60403392a4604051908152f35b9392506020843d6020116114ad575b8161148d60209383613ec8565b810103126114a9576001600160a01b036020945193945061142a565b5f80fd5b602091503d9150611480565b6040513d5f823e3d90fd5b50815f52600560205260405f206001600160a01b0333165f5260205260405f2054808411611535576113cf9181855f19819403611505575b505091506113c6565b61150e91614122565b845f52600560205260405f206001600160a01b0333165f5260205260405f205586826114fc565b7f8949e01a000000000000000000000000000000000000000000000000000000005f5260045ffd5b5f80fd5b346117d757602461157136613fe9565b90929160206001600160a01b0360095416604051948580927f0a28a4770000000000000000000000000000000000000000000000000000000082528560048301525afa9283156117cc575f93611790575b506001600160a01b03821691838333036116f7575b6115e091614fd7565b6001600160a01b036009541692602060405180957fb460af94000000000000000000000000000000000000000000000000000000008252815f81611629308c8a6004850161449e565b03925af19384156116ec575f946116b0575b508303611688576001600160a01b03602094604051928352848684015216907ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db60403392a4604051908152f35b7fc945242d000000000000000000000000000000000000000000000000000000005f5260045ffd5b9093506020813d6020116116e0575b816116cc60209383613ec8565b810103126116dc5751928561163b565b5f80fd5b602091503d91506116bf565b6040513d5f823e3d90fd5b50825f52600560205260405f206001600160a01b0333165f5260205260405f2054808511611768576115e09181865f19819403611738575b505091506115d7565b61174191614122565b855f52600560205260405f206001600160a01b0333165f5260205260405f2055878261172f565b7f8949e01a000000000000000000000000000000000000000000000000000000005f5260045ffd5b9092506020813d6020116117c0575b816117ac60209383613ec8565b810103126117bc575191846115c2565b5f80fd5b602091503d915061179f565b6040513d5f823e3d90fd5b5f80fd5b3461189257602060031936011261188e57602460206001600160a01b0360095416604051928380927fb3d7f6b900000000000000000000000000000000000000000000000000000000825260043560048301525afa8015611883575f90611848575b602090604051908152f35b506020813d602011611877575b8161186260209383613ec8565b81010312611873576020905161183d565b5f80fd5b602091503d9150611855565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b346118b7575f6003193601126118b3576020600d54604051908152f35b5f80fd5b5f80fd5b346118e5575f6003193601126118e15760206040516b033b2e3c9fd0803ce80000008152f35b5f80fd5b5f80fd5b60206003193601126119f157600435611900614982565b600460206001600160a01b03600c5416604051928380927ff3256c810000000000000000000000000000000000000000000000000000000082525afa9081156119e6575f916119ac575b508110611984576020817f098b0e961a44228aea04d09185f7568d5d639eabe7598e4562d987555b16821c92600d55604051908152a15f80f35b7ff46f666c000000000000000000000000000000000000000000000000000000005f5260045ffd5b90506020813d6020116119da575b816119c760209383613ec8565b810103126119d657518261194a565b5f80fd5b602091503d91506119ba565b6040513d5f823e3d90fd5b5f80fd5b34611a57576020600319360112611a53576020611a4a6001600160a01b03611a1b613f29565b16805f526011835260405f20905f5260108352611a44611a3e60405f20926143b9565b91614290565b90614dd6565b51604051908152f35b5f80fd5b5f80fd5b34611afa576040600319360112611af657611a74613f29565b6001600160a01b0360243591611a89336146ee565b611a92816146ee565b335f52600460205260405f20611aa9848254614122565b90551690815f52600460205260405f208181540190556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3602060405160018152f35b5f80fd5b5f80fd5b34611bcd575f600319360112611bc9576040515f600154611b1e81613e60565b908184526001811690815f14611ba05750600114611b57575b611b5383611b4781850382613ec8565b60405191829182613eff565b0390f35b91905060015f5260205f20915f905b808210611b865750611b539250816020611b479282010192509250611b37565b919260018160209254838588010152019101909291611b66565b849350611b53949150611b479260ff196020921682840152151560051b82010192509250611b37565b5f80fd5b5f80fd5b34611da3576040600319360112611d9f57600435611bed613f43565b9060246001600160a01b03600a541660206001600160a01b0360095416604051938480927fb3d7f6b90000000000000000000000000000000000000000000000000000000082528760048301525afa908115611d94575f91611d56575b611c58925030903390614d16565b6001600160a01b036009541690602060405180937f94bf804d000000000000000000000000000000000000000000000000000000008252815f81611ca030886004840161439e565b03925af1918215611d4b575f92611d03575b506001600160a01b0383611cc883602096614cb5565b604051928484528584015216907fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d760403392a3604051908152f35b9291506020833d602011611d3f575b81611d1f60209383613ec8565b81010312611d3b576001600160a01b0360209351929350611cb2565b5f80fd5b602091503d9150611d12565b6040513d5f823e3d90fd5b90506020823d602011611d88575b81611d7160209383613ec8565b81010312611d8457611c58915190611c4a565b5f80fd5b602091503d9150611d64565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b34611dd5575f600319360112611dd1576020638b78c6d819546001600160a01b0360405191168152f35b5f80fd5b5f80fd5b34611dfa575f600319360112611df657602060405162093a808152f35b5f80fd5b5f80fd5b34611e56576040600319360112611e5257611e17613f29565b6001600160a01b03611e27613f43565b91165f5260136020526001600160a01b0360405f2091165f52602052602060405f2054604051908152f35b5f80fd5b5f80fd5b34611e96576020600319360112611e92576001600160a01b03611e7b613f29565b165f526008602052602060405f2054604051908152f35b5f80fd5b5f80fd5b34611f02576020600319360112611efe576001600160a01b03611ebb613f29565b165f526010602052606060405f20546bffffffffffffffffffffffff6040519163ffffffff8116835263ffffffff8160201c16602084015260401c166040820152f35b5f80fd5b5f80fd5b5f600319360112611f5157611f19614982565b5f638b78c6d819547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a35f638b78c6d819555f80f35b5f80fd5b34611f8d576040600319360112611f89576020611f81611f73613f29565b611f7b613f43565b906143dd565b604051908152f35b5f80fd5b5f80fd5b34611fcd576020600319360112611fc9576001600160a01b03611fb2613f29565b165f526004602052602060405f2054604051908152f35b5f80fd5b5f80fd5b3461210957604060031936011261210557600435611fed613f43565b90612007816001600160a01b03600a541630903390614d16565b6001600160a01b036009541690602060405180937f6e553f65000000000000000000000000000000000000000000000000000000008252815f8161204f30886004840161439e565b03925af19182156120fa575f926120b2575b506001600160a01b038361207784602096614cb5565b604051928352838584015216907fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d760403392a3604051908152f35b9291506020833d6020116120ee575b816120ce60209383613ec8565b810103126120ea576001600160a01b0360209351929350612061565b5f80fd5b602091503d91506120c1565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b60206003193601126123a857612121613f29565b612129614982565b600e5460148114612380576001600160a01b03806009541692169182146123715730821461236257815f52600f60205260ff60405f20541661233a57602460206001600160a01b03600b5416604051928380927f679d11970000000000000000000000000000000000000000000000000000000082528760048301525afa90811561232f575f91612300575b508061227b575b612253576801000000000000000081101561223f577f0cb82d053b920831ee1dc1e166c0dc6d25c39520802e3767eada637d1e856c659161220582600160209401600e5561402f565b81549060031b906001600160a01b0384831b921b1916179055805f52600f825260405f20600160ff19825416179055604051908152a15f80f35b634e487b7160e01b5f52604160045260245ffd5b7faca00255000000000000000000000000000000000000000000000000000000005f5260045ffd5b506040517ffd812094000000000000000000000000000000000000000000000000000000008152306004820152602081602481865afa9081156122f5575f916122c6575b50156121bc565b6122e8915060203d6020116122ee575b6122e08183613ec8565b810190614363565b836122bf565b503d6122d6565b6040513d5f823e3d90fd5b612322915060203d602011612328575b61231a8183613ec8565b810190614363565b836121b5565b503d612310565b6040513d5f823e3d90fd5b7f70d84364000000000000000000000000000000000000000000000000000000005f5260045ffd5b6314414f4160e11b5f5260045ffd5b6314414f4160e11b5f5260045ffd5b7f5681f005000000000000000000000000000000000000000000000000000000005f5260045ffd5b5f80fd5b34612d815760c0600319360112612d7d576123c5613f29565b60243567ffffffffffffffff8111612d79576123e5903690600401613f77565b9060443567ffffffffffffffff8111612d7557612406903690600401613f77565b9061240f613f5d565b926084359060a435926001600160a01b038416809403612d71577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00549560ff8760401c16159667ffffffffffffffff811680159081612d64575b6001149081612d59575b159081612d50575b50612d28576001600160a01b0392818960017fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000879516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055612cd2575b501680638b78c6d819555f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a31693604051917f313ce567000000000000000000000000000000000000000000000000000000008352602083600481895afa928315612cc7575f93612c7d575b5060ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612c555780519067ffffffffffffffff8211612c415781906125945f54613e60565b601f8111612b8d575b50602090601f8311600114612b0d575f92612b01575b50505f198260011b9260031b1c1916175f555b80519067ffffffffffffffff8211612aed576125e3600154613e60565b601f8111612a46575b50602090601f83116001146129c05791809160ff94935f926129b4575b50505f198260011b9260031b1c1916176001555b1660ff19600254161760025546600655612635614851565b600755337fffffffffffffffffffffffff0000000000000000000000000000000000000000600c541617600c556040517ff3256c81000000000000000000000000000000000000000000000000000000008152602081600481335afa9081156129a9575f9161296f575b50811061294757600d55817fffffffffffffffffffffffff000000000000000000000000000000000000000060095416176009556040517f38d52e0f000000000000000000000000000000000000000000000000000000008152602081600481865afa801561293c576001600160a01b03915f9161290d575b50167fffffffffffffffffffffffff0000000000000000000000000000000000000000600a541617600a557fffffffffffffffffffffffff0000000000000000000000000000000000000000600b541617600b556127755f6146ee565b60035461271081018091116128f9575f916020916003558280526004825260408320612710815401905582807fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516127108152a360446001600160a01b03600a54169160405194859384927f095ea7b300000000000000000000000000000000000000000000000000000000845260048401525f1960248401525af180156128ee576128bf575b50612829575b5f80f35b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1612825565b6128e09060203d6020116128e7575b6128d88183613ec8565b810190614363565b508161281f565b503d6128ce565b6040513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b61292f915060203d602011612935575b6129278183613ec8565b810190614164565b85612718565b503d61291d565b6040513d5f823e3d90fd5b7ff46f666c000000000000000000000000000000000000000000000000000000005f5260045ffd5b90506020813d60201161299d575b8161298a60209383613ec8565b8101031261299957518561269f565b5f80fd5b602091503d915061297d565b6040513d5f823e3d90fd5b90915001518880612609565b90601f1983169160015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6925f5b818110612a2e575091600193918560ff97969410612a16575b505050811b0160015561261d565b01515f1960f88460031b161c19169055888080612a08565b929360206001819287860151815501950193016129ef565b60015f52601f830160051c7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019060208410612ac0575b601f0160051c7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601905b818110612ab457506125ec565b805f6001925501612aa7565b9050601f7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6919050612a7d565b634e487b7160e01b5f52604160045260245ffd5b909150015188806125b3565b91601f1916915f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563925f5b818110612b755750908460019594939210612b5d575b505050811b015f556125c6565b01515f1960f88460031b161c19169055888080612b50565b92936020600181928786015181550195019301612b3a565b9091505f8052601f830160051c7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019060208410612c14575b90601f8493920160051c7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905b818110612c01575061259d565b6001919293505f81550190839291612bf4565b9050601f7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563919050612bc6565b634e487b7160e01b5f52604160045260245ffd5b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f5260045ffd5b9092506020813d602011612cbb575b81612c9960209383613ec8565b81010312612cb7575160ff81168103612cb3579187612548565b5f80fd5b5f80fd5b602091503d9150612c8c565b6040513d5f823e3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffff000000000000000000680100000000000000019116177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055896124d9565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f5260045ffd5b9050158961247b565b9050303b1590612473565b9050600189919050612469565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f600319360112612dcb5763389a75e1600c52335f525f6020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c925f80a25f80f35b5f80fd5b34612e10576020600319360112612e0c576001600160a01b03612df0613f29565b165f52600f602052602060ff60405f2054166040519015158152f35b5f80fd5b5f80fd5b34612ecb576020600319360112612ec757602460206001600160a01b0360095416604051928380927f4cdad50600000000000000000000000000000000000000000000000000000000825260043560048301525afa8015612ebc575f90612e81575b602090604051908152f35b506020813d602011612eb0575b81612e9b60209383613ec8565b81010312612eac5760209051612e76565b5f80fd5b602091503d9150612e8e565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b60206003193601126130db576001600160a01b03612eeb613f29565b612ef3614982565b16805f52600f60205260ff60405f205416156130cc57805f526010602052612f1d60405f20614290565b815f5260106020525f604081205563ffffffff8151164210156130a4576bffffffffffffffffffffffff612f758263ffffffff612f6e8460405f1997015116928280602083015116915116906142f4565b1690614322565b1601906bffffffffffffffffffffffff82116130905760249060206001600160a01b03600b5416604051938480927f679d11970000000000000000000000000000000000000000000000000000000082528560048301525afa928315613085577eb5872962060662c5491519c5a10738afb84fc4f50598be29590a70916fe21d9360e0935f91613056575b5015613037575b506040519081525f60208201525f60408201525f60608201525f60808201525f60a08201525f60c0820152a15f80f35b6bffffffffffffffffffffffff61305091163383614bfd565b83613007565b613078915060203d60201161307e575b6130708183613ec8565b810190614363565b85613000565b503d613066565b6040513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b7fc95097db000000000000000000000000000000000000000000000000000000005f5260045ffd5b6314414f4160e11b5f5260045ffd5b5f80fd5b60a06003193601126135db576130f3613f29565b602435906044359060643592608435926001600160a01b03841684036135d75761311b614982565b6001600160a01b03831690815f52600f60205260ff60405f205416156135c857808310156135a057428111156135785782156135505762093a8061315f8483614122565b1061352857815f52601060205260405f20825f52601160205260405f209663ffffffff421642810361352457825463ffffffff8116918263ffffffff821610159182613500575b50506134d85742106134b0576004906131be8761499e565b506131cb600d5482614a77565b9460206001600160a01b03600c5416604051948580927fb0e21e8a0000000000000000000000000000000000000000000000000000000082525afa9283156134a5575f93613464575b5061322160049383614a77565b98815f5260136020526001600160a01b0360405f2091165f5260205260405f2061324c878254614143565b90555f52601360205260405f2060206001600160a01b03600c5416604051948580927f64df049e0000000000000000000000000000000000000000000000000000000082525afa92831561345957866132da938b936001600160a01b036132ea976132d5955f9161342a575b50165f5260205260405f206132ce858254614143565b9055614122565b614122565b6132e48685614122565b9061418b565b92831561340257613316876133118361330c6133068a89614122565b896141a9565b614143565b614143565b9663ffffffff86168681036133fe5763ffffffff811663ffffffff1985541617845563ffffffff85168581036133fa5761335090856141d2565b6bffffffffffffffffffffffff86168681036133f657613370908561420b565b8681036133f2576133c47eb5872962060662c5491519c5a10738afb84fc4f50598be29590a70916fe21d976133e4956133ca9363ffffffff60016133ee9f01911663ffffffff198254161790555496614122565b866141a9565b604051958563ffffffff80899860201c1691168a88614250565b0390a13390614aa3565b5f80f35b5f80fd5b5f80fd5b5f80fd5b5f80fd5b7f0906ba95000000000000000000000000000000000000000000000000000000005f5260045ffd5b61344c915060203d602011613452575b6134448183613ec8565b810190614164565b5f6132b8565b503d61343a565b6040513d5f823e3d90fd5b92506020833d602011613499575b8161347f60209383613ec8565b8101031261349557613221600493519350613214565b5f80fd5b602091503d9150613472565b6040513d5f823e3d90fd5b7f7f8ce23e000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fc95097db000000000000000000000000000000000000000000000000000000005f5260045ffd5b9091504282036135205763ffffffff809160201c16911611158a806131a6565b5f80fd5b5f80fd5b7fb534741d000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f22b147fe000000000000000000000000000000000000000000000000000000005f5260045ffd5b7feb6e7279000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fe045c7a4000000000000000000000000000000000000000000000000000000005f5260045ffd5b6314414f4160e11b5f5260045ffd5b5f80fd5b5f80fd5b34613609575f6003193601126136055760206001600160a01b0360095416604051908152f35b5f80fd5b5f80fd5b346136cb5760206003193601126136c757613626613f29565b50602460206001600160a01b0360095416604051928380927f402d267d0000000000000000000000000000000000000000000000000000000082523060048301525afa80156136bc575f90613681575b602090604051908152f35b506020813d6020116136b0575b8161369b60209383613ec8565b810103126136ac5760209051613676565b5f80fd5b602091503d915061368e565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b346136f9575f6003193601126136f55760206001600160a01b03600a5416604051908152f35b5f80fd5b5f80fd5b34613723575f60031936011261371f576020613717614103565b604051908152f35b5f80fd5b5f80fd5b3461374b575f60031936011261374757602060ff60025416604051908152f35b5f80fd5b5f80fd5b604060031936011261377857613774613766613f29565b61376e613f43565b9061405b565b5f80f35b5f80fd5b5f6003193601126137c75763389a75e1600c52335f526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d5f80a25f80f35b5f80fd5b346137f5575f6003193601126137f15760206001600160a01b03600b5416604051908152f35b5f80fd5b5f80fd5b346138e95760606003193601126138e557613812613f29565b61381a613f43565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206001600160a01b038060443595613853816146ee565b61385c866146ee565b1693845f526005835260405f208233165f52835260405f2054865f1982036138be575b5050845f526004835260405f20613897878254614122565b90551693845f526004825260405f20818154019055604051908152a3602060405160018152f35b6138c791614122565b855f526005845260405f208333165f52845260405f2055868661387f565b5f80fd5b5f80fd5b34613917575f6003193601126139135760206001600160a01b03600c5416604051908152f35b5f80fd5b5f80fd5b604060031936011261397e5761392f613f29565b613937613f43565b6001600160a01b0381165f52600f60205260ff60405f2054161561396f5761396b9161396333836143dd565b913390614634565b5f80f35b6314414f4160e11b5f5260045ffd5b5f80fd5b60206003193601126139de57613996613f29565b5f5b600e548110156139da57806139d46001600160a01b036139b960019461402f565b90549060031b1c16846139cc33836143dd565b913390614634565b01613998565b5f80f35b5f80fd5b34613a03575f6003193601126139ff576020600354604051908152f35b5f80fd5b5f80fd5b6020600319360112613a5657613a1b613f29565b5f5b600e54811015613a525780613a4c6001600160a01b03613a3e60019461402f565b90549060031b1c168461405b565b01613a1d565b5f80f35b5f80fd5b34613b11576020600319360112613b0d57602460206001600160a01b0360095416604051928380927f0a28a47700000000000000000000000000000000000000000000000000000000825260043560048301525afa8015613b02575f90613ac7575b602090604051908152f35b506020813d602011613af6575b81613ae160209383613ec8565b81010312613af25760209051613abc565b5f80fd5b602091503d9150613ad4565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b34613b91576040600319360112613b8d57613b2e613f29565b6001600160a01b0360243591335f52600560205260405f208282165f526020528260405f205560405192835216907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b5f80fd5b5f80fd5b34613c4c576020600319360112613c4857602460206001600160a01b0360095416604051928380927f07a2d13a00000000000000000000000000000000000000000000000000000000825260043560048301525afa8015613c3d575f90613c02575b602090604051908152f35b506020813d602011613c31575b81613c1c60209383613ec8565b81010312613c2d5760209051613bf7565b5f80fd5b602091503d9150613c0f565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b34613d1d575f600319360112613d19576040515f5f54613c6f81613e60565b908184526001811690815f14613cf05750600114613ca8575b613ca483613c9881850382613ec8565b60405191829182613eff565b0390f35b9190505f805260205f20915f905b808210613cd65750613ca49250816020613c989282010192509250613c88565b919260018160209254838588010152019101909291613cb6565b849350613ca4949150613c989260ff196020921682840152151560051b82010192509250613c88565b5f80fd5b5f80fd5b34613e5c575f600319360112613e58576001600160a01b0360095416907f70a08231000000000000000000000000000000000000000000000000000000008152306004820152602081602481855afa8015613e4d575f90613e12575b602091506024604051809481937f07a2d13a00000000000000000000000000000000000000000000000000000000835260048301525afa8015613e07575f90613dcc575b602090604051908152f35b506020813d602011613dfb575b81613de660209383613ec8565b81010312613df75760209051613dc1565b5f80fd5b602091503d9150613dd9565b6040513d5f823e3d90fd5b506020813d602011613e41575b81613e2c60209383613ec8565b81010312613e3d5760209051613d7d565b5f80fd5b602091503d9150613e1f565b6040513d5f823e3d90fd5b5f80fd5b5f80fd5b90600182811c92168015613e8e575b6020831014613e7a57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691613e6f565b6040810190811067ffffffffffffffff821117613eb457604052565b634e487b7160e01b5f52604160045260245ffd5b90601f601f19910116810190811067ffffffffffffffff821117613eeb57604052565b634e487b7160e01b5f52604160045260245ffd5b601f19601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b600435906001600160a01b0382168203613f3f57565b5f80fd5b602435906001600160a01b0382168203613f5957565b5f80fd5b606435906001600160a01b0382168203613f7357565b5f80fd5b81601f82011215613fe55780359067ffffffffffffffff8211613fd15760405192613fac6020601f19601f8601160185613ec8565b82845260208383010111613fcd57815f926020809301838601378301015290565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b600319606091011261402b57600435906024356001600160a01b038116810361402757906044356001600160a01b03811681036140235790565b5f80fd5b5f80fd5b5f80fd5b600e5481101561404757600e5f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b906001600160a01b038116805f52600f60205260ff60405f205416156140f4576140e66040927fc6650a50e06482f404489255d667b1516ad09a67e97cf0a35b67ee1ab89090c894835f526013602052845f206001600160a01b0333165f52602052845f205491845f526013602052855f206001600160a01b0333165f526020525f8681205561472c565b8151903382526020820152a1565b6314414f4160e11b5f5260045ffd5b60065446145f14614115576007545b90565b61411d614851565b614112565b9190820391821161412f57565b634e487b7160e01b5f52601160045260245ffd5b9190820180921161415057565b634e487b7160e01b5f52601160045260245ffd5b9081602091031261418757516001600160a01b03811681036141835790565b5f80fd5b5f80fd5b8115614195570490565b634e487b7160e01b5f52601260045260245ffd5b9190918281029281840414901517156141be57565b634e487b7160e01b5f52601160045260245ffd5b907fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff67ffffffff0000000083549260201b169116179055565b907fffffffffffffffffffffffff000000000000000000000000ffffffffffffffff73ffffffffffffffffffffffff000000000000000083549260401b169116179055565b93909796959263ffffffff908160c097946001600160a01b0360e089019c1688521660208701521660408501526060840152608083015260a08201520152565b906040516060810181811067ffffffffffffffff8211176142e05760405260406bffffffffffffffffffffffff82945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b634e487b7160e01b5f52604160045260245ffd5b9063ffffffff8091169116039063ffffffff821161430e57565b634e487b7160e01b5f52601160045260245ffd5b906bffffffffffffffffffffffff809116911602906bffffffffffffffffffffffff821691820361434f57565b634e487b7160e01b5f52601160045260245ffd5b9081602091031261437f5751801515810361437b5790565b5f80fd5b5f80fd5b602090939291936001600160a01b0360408201951681520152565b9092916001600160a01b036020916040840195845216910152565b906040516143c681613e98565b602063ffffffff6001839580548552015416910152565b906b033b2e3c9fd0803ce80000006144946001600160a01b0361449b9416805f52601260205260405f206001600160a01b0385165f5260205261448e60405f206001600160a01b0361447560016040519361443785613e98565b8054855201549460208401958652805f52601160205260405f20905f52601060205261446f61446960405f20926143b9565b91614290565b90614dd6565b915196165f52600460205260405f205492519051614122565b906141a9565b0490614143565b90565b9160409194936001600160a01b0380926060860197865216602085015216910152565b6001600160a01b03165f5260106020526144dd60405f20614290565b63ffffffff81511642108015614620575b61461a57602460206001600160a01b0360095416604051928380927fef8b30f70000000000000000000000000000000000000000000000000000000082528760048301525afa90811561460f575f916145b6575b5061456e614565826bffffffffffffffffffffffff6040614574960151166141a9565b91600354614143565b9061418b565b90670de0b6b3a7640000820291808304670de0b6b3a764000014901517156145a25761459f9161418b565b90565b634e487b7160e01b5f52601160045260245ffd5b90506020813d602011614603575b816145d160209383613ec8565b810103126145ff5761456e614565614574936bffffffffffffffffffffffff60409451945050935050614542565b5f80fd5b602091503d91506145c4565b6040513d5f823e3d90fd5b50505f90565b5063ffffffff6020820151164210156144ee565b91926146408284615039565b506fffffffffffffffffffffffffffffffff8116918183036146ea57846001600160a01b0380926146d0857f913c992353dc81b7a8ba31496c484e9b6306bd2f6c509a649a38fdf5e1c953b299898560809b16998a5f52601260205260405f208787165f526020526146c96fffffffffffffffffffffffffffffffff60405f2092168254614122565b905561472c565b6040519586521660208501521660408301526060820152a1565b5f80fd5b905f5b600e548110156147275780614720846001600160a01b0361471360019561402f565b90549060031b1c16615039565b50016146f1565b509050565b91801561484c576001600160a01b03602081600b5416946024604051809481937f679d119700000000000000000000000000000000000000000000000000000000835216978860048301525afa908115614841575f91614812575b505f1461480357823b156147ff576147d1925f92836040518096819582947f5d8a776e00000000000000000000000000000000000000000000000000000000845260048401614383565b03925af180156147f4576147e4575b505b565b5f6147ee91613ec8565b5f6147e0565b6040513d5f823e3d90fd5b5f80fd5b9061480d92614bfd565b6147e2565b614834915060203d60201161483a575b61482c8183613ec8565b810190614363565b5f614787565b503d614822565b6040513d5f823e3d90fd5b505050565b6040515f905f54918161486384613e60565b9182825260208201946001811690815f146149655750600114614907575b61488d92500382613ec8565b51902060405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815261490160c082613ec8565b51902090565b50905f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563905f915b81831061494957505090602061488d92820101614881565b6020919350806001915483858801015201910190918392614931565b6020925061488d94915060ff19168652151560051b820101614881565b638b78c6d81954330361499157565b6382b429005f526004601cfd5b6040516149aa81613e98565b5f81525f6020820152506001600160a01b038116805f52601060205260405f2091815f52601160205263ffffffff60206149f86149f26149ec60405f206143b9565b96614290565b86614dd6565b9401511690602084019163ffffffff83511614614a71577fe6bad1caf3e2f8873a0fc037961187ce09a5dc47132dee9dc289b4d7c8b52884925f52601160205260405f2063ffffffff60018187519586855551169201911663ffffffff19825416179055614a6b60405192839283614383565b0390a190565b50505090565b90805f19048211810215670de0b6b3a76400000215614a9f57670de0b6b3a764000091020490565b5f80fd5b91906001600160a01b03602081600b5416946024604051809481937f679d119700000000000000000000000000000000000000000000000000000000835216978860048301525afa908115614bf2575f91614bc3575b505f14614bb25750506020602491604051928380927ffd8120940000000000000000000000000000000000000000000000000000000082523060048301525afa908115614ba7575f91614b78575b5015614b50575b565b7faca00255000000000000000000000000000000000000000000000000000000005f5260045ffd5b614b9a915060203d602011614ba0575b614b928183613ec8565b810190614363565b5f614b47565b503d614b88565b6040513d5f823e3d90fd5b91614bbe923091614d16565b614b4e565b614be5915060203d602011614beb575b614bdd8183613ec8565b810190614363565b5f614af9565b503d614bd3565b6040513d5f823e3d90fd5b5f91826044926020956001600160a01b03604051947fa9059cbb00000000000000000000000000000000000000000000000000000000865216600485015260248401525af13d15601f3d1160015f511416171615614c5757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152fd5b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206001600160a01b035f93614ceb816146ee565b614cf786600354614143565b60035516938484526004825260408420818154019055604051908152a3565b905f6064926020956001600160a01b03839681604051967f23b872dd00000000000000000000000000000000000000000000000000000000885216600487015216602485015260448401525af13d15601f3d1160015f511416171615614d7857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fd5b604051614de281613e98565b5f81525f602082015250805191602082019163ffffffff83511660405194614e0986613e98565b85526020850190815263ffffffff835116804210614f915715614f8a5763ffffffff6020840151168042105f14614f7b5750614e4e63ffffffff42955b511685614122565b938415614f735763ffffffff8116908103614f6f5763ffffffff1690526b033b2e3c9fd0803ce80000008302908382046b033b2e3c9fd0803ce800000003614f5b5760406bffffffffffffffffffffffff915193015116906b033b2e3c9fd0803ce800000082600354950202918482158284860414170215614ede57505091614ed99204905b614143565b815290565b805f1986928409848110850190039209845f0385169180861115614f4e5782614ed9960480600302600218808202600203028082026002030280820260020302808202600203028082026002030280910260020302936001848483030494805f0304019211900302170290614ed4565b63ae47f7025f526004601cfd5b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b505050505090565b63ffffffff614e4e9195614e46565b5050505090565b505050505090565b6001600160a01b031680638b78c6d819547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3638b78c6d81955565b907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206001600160a01b035f9461500e816146ee565b16928385526004825260408520615026828254614122565b90558060035403600355604051908152a3565b9060405161504681613e98565b5f81525f6020820152506001600160a01b036150618361499e565b921691825f52601260205260405f206001600160a01b0383165f5260205260405f209260016040519461509386613e98565b805486520154926020850193808552835114615186576001600160a01b031692835f5260046020526b033b2e3c9fd0803ce80000006150e260405f20546150dc84518751614122565b906141a9565b04906fffffffffffffffffffffffffffffffff8216918203615182577f21f5ec8a329359286384848dfcacbdc9bc241a3de123590e54d557887c998e71946080946151426fffffffffffffffffffffffffffffffff600195168951614143565b8852518252835f52601260205260405f20815f5260205260405f20875192838255519384910155604051938452602084015260408301526060820152a190565b5f80fd5b505050509056";

        (bool success, bytes memory data) = CREATE2_FACTORY_ADDRESS.call(deploymentCalldata);

        if (!success) {
            revert DeploymentFailed(data);
        }
    }

    function _deploy(string memory _salt, bytes memory _creationCode) internal returns (address deployedAddress) {
        (bool success, bytes memory data) = CREATE2_FACTORY_ADDRESS.call(abi.encodePacked(_generateUint256SaltFromString(_salt), _creationCode));

        if (!success) {
            revert DeploymentFailed(data);
        }

        assembly ("memory-safe") {
            deployedAddress := shr(0x60, mload(add(data, 0x20)))
        }
    }

    function _deployWithSanityChecks(string memory _salt, bytes memory _creationCode) internal returns (address, bool isAlreadyDeployed) {
        address expectedAddress = _generateDeterminsticAddress(_salt, _creationCode);

        if (address(expectedAddress).code.length != 0) {
            console2.log("contract already deployed at: ", expectedAddress);
            return (expectedAddress, true);
        }

        address addr = _deploy(_salt, _creationCode);

        if (addr != expectedAddress) {
            revert NotDeployedToExpectedAddress(expectedAddress, addr);
        }

        if (address(addr).code.length == 0) {
            revert AddressDoesNotContainBytecode(addr);
        }

        return (addr, false);
    }

    function _verifyPointsFactoryDeployment(PointsFactory _pointsFactory) internal view {
        if (address(_pointsFactory) != EXPECTED_POINTS_FACTORY_ADDRESS) {
            revert UnexpectedDeploymentAddress(EXPECTED_POINTS_FACTORY_ADDRESS, address(_pointsFactory));
        }

        if (_pointsFactory.owner() != ROYCO_OWNER) revert PointsFactoryOwnerIncorrect(ROYCO_OWNER, _pointsFactory.owner());
    }

    function _verifyWrappedVaultDeployment(WrappedVault _wrappedVault) internal pure {
        if (address(_wrappedVault) != EXPECTED_WRAPPED_VAULT_ADDRESS) {
            revert UnexpectedDeploymentAddress(EXPECTED_WRAPPED_VAULT_ADDRESS, address(_wrappedVault));
        }
    }

    function _verifyWrappedVaultFactoryDeployment(WrappedVaultFactory _wrappedVaultFactory, PointsFactory _pointsFactory, WrappedVault _impl) internal view {
        if (address(_wrappedVaultFactory) != EXPECTED_WRAPPED_VAULT_FACTORY_ADDRESS) {
            revert UnexpectedDeploymentAddress(EXPECTED_WRAPPED_VAULT_FACTORY_ADDRESS, address(_wrappedVaultFactory));
        }
        if (_wrappedVaultFactory.protocolFeeRecipient() != PROTOCOL_FEE_RECIPIENT) {
            revert WrappedVaultFactoryProtocolFeeRecipientIncorrect(PROTOCOL_FEE_RECIPIENT, _wrappedVaultFactory.protocolFeeRecipient());
        }
        if (_wrappedVaultFactory.protocolFee() != PROTOCOL_FEE) {
            revert WrappedVaultFactoryProtocolFeeIncorrect(PROTOCOL_FEE, _wrappedVaultFactory.protocolFee());
        }
        if (_wrappedVaultFactory.minimumFrontendFee() != MINIMUM_FRONTEND_FEE) {
            revert WrappedVaultFactoryMinimumFrontendFeeIncorrect(MINIMUM_FRONTEND_FEE, _wrappedVaultFactory.minimumFrontendFee());
        }
        if (_wrappedVaultFactory.owner() != ROYCO_OWNER) {
            revert WrappedVaultFactoryOwnerIncorrect(ROYCO_OWNER, _wrappedVaultFactory.owner());
        }
        if (_wrappedVaultFactory.pointsFactory() != address(_pointsFactory)) {
            revert WrappedVaultFactoryPointsFactoryIncorrect(address(_pointsFactory), _wrappedVaultFactory.pointsFactory());
        }
        address actualImpl = address(uint160(uint256(vm.load(address(_wrappedVaultFactory), WRAPPED_VAULT_FACTORY_IMPL_SLOT))));
        if (actualImpl != address(_impl)) {
            revert WrappedVaultFactoryImplementationIncorrect(address(_impl), actualImpl);
        }
    }

    function _verifyWeirollWalletDeployment(WeirollWallet _weirollWallet) internal pure {
        if (address(_weirollWallet) != EXPECTED_WEIROLL_WALLET_ADDRESS) {
            revert UnexpectedDeploymentAddress(EXPECTED_WEIROLL_WALLET_ADDRESS, address(_weirollWallet));
        }
    }

    function _verifyVaultMarketHubDeployment(VaultMarketHub _vaultMarketHub) internal view {
        if (address(_vaultMarketHub) != EXPECTED_VAULT_MARKET_HUB_ADDRESS) {
            revert UnexpectedDeploymentAddress(EXPECTED_VAULT_MARKET_HUB_ADDRESS, address(_vaultMarketHub));
        }
        if (_vaultMarketHub.owner() != ROYCO_OWNER) revert VaultMarketHubOwnerIncorrect(ROYCO_OWNER, _vaultMarketHub.owner());
    }

    function _verifyRecipeMarketHubDeployment(RecipeMarketHub _recipeMarketHub, WeirollWallet _weirollWallet, PointsFactory _pointsFactory) internal view {
        if (address(_recipeMarketHub) != EXPECTED_RECIPE_MARKET_HUB_ADDRESS) {
            revert UnexpectedDeploymentAddress(EXPECTED_RECIPE_MARKET_HUB_ADDRESS, address(_recipeMarketHub));
        }
        if (_recipeMarketHub.WEIROLL_WALLET_IMPLEMENTATION() != address(_weirollWallet)) {
            revert RecipeMarketHubWeirollWalletImplementationIncorrect(address(_weirollWallet), _recipeMarketHub.WEIROLL_WALLET_IMPLEMENTATION());
        }
        if (_recipeMarketHub.protocolFee() != PROTOCOL_FEE) {
            revert RecipeMarketHubProtocolFeeIncorrect(PROTOCOL_FEE, _recipeMarketHub.protocolFee());
        }
        if (_recipeMarketHub.minimumFrontendFee() != MINIMUM_FRONTEND_FEE) {
            revert RecipeMarketHubMinimumFrontendFeeIncorrect(MINIMUM_FRONTEND_FEE, _recipeMarketHub.minimumFrontendFee());
        }
        if (_recipeMarketHub.owner() != ROYCO_OWNER) {
            revert RecipeMarketHubOwnerIncorrect(ROYCO_OWNER, _recipeMarketHub.owner());
        }
        if (_recipeMarketHub.POINTS_FACTORY() != address(_pointsFactory)) {
            revert RecipeMarketHubPointsFactoryIncorrect(address(_pointsFactory), _recipeMarketHub.POINTS_FACTORY());
        }
    }

    function run() external {
        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");
        address deployerAddress = vm.addr(deployerPrivateKey);

        console2.log("Deploying with address: ", deployerAddress);
        console2.log("Deployer Balance: ", address(deployerAddress).balance);

        vm.startBroadcast(deployerPrivateKey);

        _checkDeployer();
        console2.log("Deployer is ready\n");

        // Deploy PointsFactory
        console2.log("Deploying PointsFactory");
        bytes memory pointsFactoryCreationCode = abi.encodePacked(vm.getCode("PointsFactory"), abi.encode(ROYCO_OWNER));
        (address deployedContractAddress, bool isAlreadyDeployed) = _deployWithSanityChecks(POINTS_FACTORY_SALT, pointsFactoryCreationCode);
        PointsFactory pointsFactory = PointsFactory(deployedContractAddress);
        if (!isAlreadyDeployed) {
            console2.log("Verifying PointsFactory deployment");
            _verifyPointsFactoryDeployment(pointsFactory);
        }
        console2.log("PointsFactory deployed at: ", address(pointsFactory), "\n");

        // Deploy WrappedVault
        console2.log("Deploying WrappedVault");
        bytes memory wrappedVaultCreationCode = abi.encodePacked(vm.getCode("WrappedVault"));
        (deployedContractAddress, isAlreadyDeployed) = _deployWithSanityChecks(WRAPPED_VAULT_SALT, wrappedVaultCreationCode);
        WrappedVault wrappedVault = WrappedVault(deployedContractAddress);
        if (!isAlreadyDeployed) {
            console2.log("Verifying WrappedVault deployment");
            _verifyWrappedVaultDeployment(wrappedVault);
        }
        console2.log("WrappedVault deployed at: ", address(wrappedVault), "\n");

        // Deploy WrappedVaultFactory
        console2.log("Deploying WrappedVaultFactory");
        bytes memory wrappedVaultFactoryCreationCode = abi.encodePacked(
            vm.getCode("WrappedVaultFactory"),
            abi.encode(
                _OLD_WRAPPED_VAULT_IMPLEMENTATION_DO_NOT_USE_APART_FROM_WVF_DEPLOYMENT,
                PROTOCOL_FEE_RECIPIENT,
                PROTOCOL_FEE,
                MINIMUM_FRONTEND_FEE,
                ROYCO_OWNER,
                address(pointsFactory)
            )
        );
        console2.log("Deploying old WrappedVault implementation");
        _deployOldWrappedVaultImplementation();
        (deployedContractAddress, isAlreadyDeployed) = _deployWithSanityChecks(WRAPPED_VAULT_FACTORY_SALT, wrappedVaultFactoryCreationCode);
        WrappedVaultFactory wrappedVaultFactory = WrappedVaultFactory(deployedContractAddress);
        if (!isAlreadyDeployed) {
            console2.log("Verifying WrappedVaultFactory deployment");
            _verifyWrappedVaultFactoryDeployment(
                wrappedVaultFactory, pointsFactory, WrappedVault(_OLD_WRAPPED_VAULT_IMPLEMENTATION_DO_NOT_USE_APART_FROM_WVF_DEPLOYMENT)
            );
        }
        console2.log("WrappedVaultFactory deployed at: ", address(wrappedVaultFactory), "\n");

        // Deploy WeirollWallet
        console2.log("Deploying WeirollWallet");
        bytes memory weirollWalletCreationCode = abi.encodePacked(vm.getCode("WeirollWallet"));
        (deployedContractAddress, isAlreadyDeployed) = _deployWithSanityChecks(WEIROLL_WALLET_SALT, weirollWalletCreationCode);
        WeirollWallet weirollWallet = WeirollWallet(payable(deployedContractAddress));
        if (!isAlreadyDeployed) {
            console2.log("Verifying WeirollWallet deployment");
            _verifyWeirollWalletDeployment(weirollWallet);
        }
        console2.log("WeirollWallet deployed at: ", address(weirollWallet), "\n");

        // Deploy VaultMarketHub
        console2.log("Deploying VaultMarketHub");
        bytes memory vaultMarketHubCreationCode = abi.encodePacked(vm.getCode("VaultMarketHub"), abi.encode(ROYCO_OWNER));
        (deployedContractAddress, isAlreadyDeployed) = _deployWithSanityChecks(VAULT_MARKET_HUB_SALT, vaultMarketHubCreationCode);
        VaultMarketHub vaultMarketHub = VaultMarketHub(deployedContractAddress);
        if (!isAlreadyDeployed) {
            console2.log("Verifying VaultMarketHub deployment");
            _verifyVaultMarketHubDeployment(vaultMarketHub);
        }
        console2.log("VaultMarketHub deployed at: ", address(vaultMarketHub), "\n");

        // Deploy RecipeMarketHub
        console2.log("Deploying RecipeMarketHub");
        bytes memory recipeMarketHubCreationCode = abi.encodePacked(
            vm.getCode("RecipeMarketHub"), abi.encode(address(weirollWallet), PROTOCOL_FEE, MINIMUM_FRONTEND_FEE, ROYCO_OWNER, address(pointsFactory))
        );
        (deployedContractAddress, isAlreadyDeployed) = _deployWithSanityChecks(RECIPE_MARKET_HUB_SALT, recipeMarketHubCreationCode);
        RecipeMarketHub recipeMarketHub = RecipeMarketHub(deployedContractAddress);
        if (!isAlreadyDeployed) {
            console2.log("Verifying RecipeMarketHub deployment");
            _verifyRecipeMarketHubDeployment(recipeMarketHub, weirollWallet, pointsFactory);
        }
        console2.log("RecipeMarketHub deployed at: ", address(recipeMarketHub), "\n");

        vm.stopBroadcast();
    }
}
